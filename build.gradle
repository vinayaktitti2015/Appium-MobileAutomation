// Top-level build file where you can add configuration options common to all sub-projects/modules.
import net.masterthought.cucumber.Configuration
import net.masterthought.cucumber.ReportBuilder
import net.masterthought.cucumber.Reportable

group 'Paytm'
version '1.0-SNAPSHOT'

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'maven'
//apply plugin: 'de.felixschulze.gradle.spoon'

repositories {
    maven {
        url "http://repo.bodar.com"
    }
    mavenCentral()

}


buildscript {
    repositories {
        mavenCentral()
        maven {
            url "http://repo.bodar.com"
        }
    }
    dependencies {
        classpath "org.codehaus.gpars:gpars:1.2.1",
                "net.masterthought:cucumber-reporting:3.8.0",
                'de.felixschulze.gradle:gradle-spoon-plugin:2.7.3'
        //'com.android.tools.build:gradle:2.3.3',

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        mavenCentral()
    }
}


ext.cukesVersion = '1.2.5'

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    compile 'commons-lang:commons-lang:2.3'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.0'

    compile group: 'net.masterthought', name: 'cucumber-reporting', version: "3.6.0"
    compile group: 'com.googlecode.totallylazy', name: 'totallylazy', version: '1.85'
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: "3.5.3"
    compile group: 'org.seleniumhq.selenium', name: 'selenium-server', version: "3.5.3"

    compile group: 'info.cukes', name: 'cucumber-junit', version: "$cukesVersion"
    compile group: 'info.cukes', name: 'cucumber-core', version: "$cukesVersion"
    compile group: 'info.cukes', name: 'cucumber-java8', version: "$cukesVersion"
    compile group: 'info.cukes', name: 'cucumber-jvm-deps', version: '1.0.5'
    compile group: 'info.cukes', name: 'gherkin', version: '2.12.2'
    compile group: 'info.cukes', name: 'gherkin-jvm-deps', version: '1.0.3'

    // https://mvnrepository.com/artifact/com.google.guava/guava
    compile group: 'com.google.guava', name: 'guava', version: '23.0'

    // https://mvnrepository.com/artifact/org.testng/testng
    testCompile group: 'org.testng', name: 'testng', version: '6.11'

    // https://mvnrepository.com/artifact/junit/junit
    testCompile group: 'junit', name: 'junit', version: '4.12'

    // https://mvnrepository.com/artifact/io.appium/java-client
    compile group: 'io.appium', name: 'java-client', version: '5.0.0'

    // https://mvnrepository.com/artifact/com.squareup.spoon/spoon-client
    compile group: 'com.squareup.spoon', name: 'spoon-client', version: '1.7.1'

    compile(
            "org.codehaus.groovy:groovy-all:2.4.7"
    )

    compile files("$buildDir/classes/main")

    // compile name: 'Automation-Framework-1.1'

}

task generateCucumberReport() {
    doLast {
        generateReport()
    }
}

task run() {
    doLast {
        def arglist = ["-p", "pretty", "-p", "json:${project.projectDir}/target/cucumber.json", "--glue", "classpath:stepDefinitions",
                       "${project.projectDir}/src/test/resources/features", '--tags', "@test"]

        return javaexec {
            main = "cucumber.api.cli.Main"
            classpath = sourceSets.test.runtimeClasspath
            args = arglist
        }
        generateReport()
    }
}

def generateReport() {
    def jsonReports = fileTree(dir: "target/").include '**/*.json'.toString()
    File reportOutputDirectory = new File("${project.projectDir}/target")

    List<String> jsonReportFiles = new ArrayList<String>()
    jsonReports.each { File file ->
        jsonReportFiles.add("${project.projectDir}/target/${file.name}".toString())
}

    Configuration configuration = new Configuration(reportOutputDirectory, System.getenv("env"))
    // optional configuration
    configuration.setParallelTesting(false)
    configuration.setRunWithJenkins(false)

    ReportBuilder reportBuilder = new ReportBuilder(jsonReportFiles, configuration)
    Reportable result = reportBuilder.generateReports()
    println("\nReport available on: ${project.projectDir}/target/cucumber-html-reports/overview-features.html")
}









